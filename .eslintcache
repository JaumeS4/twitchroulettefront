[{"C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\index.tsx":"1","C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\App.tsx":"2","C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\components\\usersList.tsx":"3","C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\components\\ResultsList.tsx":"4","C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\components\\Result.tsx":"5","C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\components\\UsersList.tsx":"6","C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\components\\User.tsx":"7","C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\router\\AppRouter.tsx":"8","C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\context\\SocketContext.tsx":"9","C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\pages\\RoulettePage.tsx":"10","C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\hooks\\useSocket.tsx":"11","C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\context\\roulette\\RouletteContext.tsx":"12","C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\context\\roulette\\RouletteReducer.tsx":"13","C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\types\\index.tsx":"14"},{"size":209,"mtime":1610643925870,"results":"15","hashOfConfig":"16"},{"size":420,"mtime":1611257975139,"results":"17","hashOfConfig":"16"},{"size":1208,"mtime":1610763673521,"results":"18","hashOfConfig":"19"},{"size":1170,"mtime":1611259736517,"results":"20","hashOfConfig":"16"},{"size":355,"mtime":1611259498372,"results":"21","hashOfConfig":"16"},{"size":2097,"mtime":1611338487325,"results":"22","hashOfConfig":"16"},{"size":1468,"mtime":1611338461846,"results":"23","hashOfConfig":"16"},{"size":498,"mtime":1611254054747,"results":"24","hashOfConfig":"16"},{"size":500,"mtime":1611335540981,"results":"25","hashOfConfig":"16"},{"size":7666,"mtime":1611338184543,"results":"26","hashOfConfig":"16"},{"size":688,"mtime":1611253033933,"results":"27","hashOfConfig":"16"},{"size":1336,"mtime":1611330688194,"results":"28","hashOfConfig":"16"},{"size":2241,"mtime":1611330916492,"results":"29","hashOfConfig":"16"},{"size":570,"mtime":1611287740943,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"138eqfe",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"asqv8u",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\index.tsx",[],["63","64","65","66","67","68"],"C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\App.tsx",[],"C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\components\\usersList.tsx",[],["69","70","71","72","73","74"],"C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\components\\ResultsList.tsx",[],"C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\components\\Result.tsx",[],"C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\components\\UsersList.tsx",[],"C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\components\\User.tsx",[],"C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\router\\AppRouter.tsx",[],"C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\context\\SocketContext.tsx",[],"C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\pages\\RoulettePage.tsx",["75","76","77"],"import React, { useContext, useEffect } from 'react';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport UsersList from '../components/UsersList';\r\nimport ResultsList from '../components/ResultsList';\r\nimport { RouletteContext } from '../context/roulette/RouletteContext';\r\nimport RouletteTypes from '../types';\r\nimport { SocketContext } from '../context/SocketContext';\r\n\r\nlet wheel: any;\r\n\r\nconst RoulettePage: React.FC = () => {\r\n    const {\r\n        rouletteState: {\r\n            users,\r\n            winnerObject,\r\n            activeWinner,\r\n            spinning,\r\n            defaultRouletteActive,\r\n            colorIndex,\r\n            defaultUsers,\r\n            colors,\r\n        },\r\n        dispatch,\r\n    } = useContext(RouletteContext);\r\n\r\n    const { socket } = useContext(SocketContext);\r\n\r\n    const audio = new Audio('/assets/rouletteaudio.mp3');\r\n\r\n    const createRoulette = (usersArg: UserType[]) => {\r\n        let ind = 0;\r\n\r\n        const segments = usersArg.map((user) => {\r\n            const segmentObj = {\r\n                fillStyle: colors[ind],\r\n                text: user.name,\r\n                textFontSize: 16,\r\n                textFillStyle: '#000',\r\n                strokeStyle: '#fff',\r\n            };\r\n\r\n            ind += 1;\r\n            if (ind > 6) ind = 0;\r\n            return segmentObj;\r\n        });\r\n        // eslint-disable-next-line\r\n        // @ts-ignore\r\n        return new Winwheel({\r\n            outerRadius: 250, // Set outer radius so wheel fits inside the background.\r\n            innerRadius: 40, // Make wheel hollow so segments dont go all way to center.\r\n            textFontSize: 24, // Set default font size for the segments.\r\n            textOrientation: 'horizontal', // Make text vertical so goes down from the outside of wheel.\r\n            textAlignment: 'center', // Align text to outside of wheel.\r\n            numSegments: segments.length, // Specify number of segments.\r\n            // Define segments including colour and text.\r\n            segments,\r\n            // Specify the animation to use.\r\n            animation: {\r\n                type: 'spinToStop',\r\n                duration: 5,\r\n                spins: 3,\r\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n                callbackFinished: alertPrize, // Function to call whent the spinning has stopped.\r\n            },\r\n        });\r\n    };\r\n\r\n    const alertPrize = (indicatedSegment: any) => {\r\n        dispatch({ type: RouletteTypes.SetActiveWinner, payload: true });\r\n        dispatch({ type: RouletteTypes.SetActiveWinner, payload: true });\r\n\r\n        const { text, fillStyle } = indicatedSegment;\r\n\r\n        dispatch({ type: RouletteTypes.SetWinnerObject, payload: { text, fillStyle } });\r\n        dispatch({ type: RouletteTypes.SetResult, payload: { result: text } });\r\n    };\r\n\r\n    const onSpinClick = () => {\r\n        if (spinning) return;\r\n\r\n        if (defaultRouletteActive) {\r\n            wheel = createRoulette(defaultUsers);\r\n        } else {\r\n            wheel = createRoulette(users);\r\n        }\r\n\r\n        audio.play();\r\n        wheel.startAnimation();\r\n        dispatch({ type: RouletteTypes.SetSpinning, payload: true });\r\n    };\r\n\r\n    const hideWinner = () => {\r\n        dispatch({ type: RouletteTypes.SetActiveWinner, payload: false });\r\n        dispatch({ type: RouletteTypes.SetSpinning, payload: false });\r\n    };\r\n\r\n    const addUser = (user: UserType) => {\r\n        if (spinning) return;\r\n\r\n        dispatch({ type: RouletteTypes.SetUser, payload: user });\r\n\r\n        if (defaultRouletteActive) {\r\n            wheel = createRoulette([user]);\r\n\r\n            dispatch({ type: RouletteTypes.IncrementColorIndex });\r\n            dispatch({ type: RouletteTypes.SetDefaultRouletteActive, payload: false });\r\n        } else {\r\n            wheel.addSegment({\r\n                text: user.name,\r\n                fillStyle: colors[colorIndex],\r\n                textFontSize: 16,\r\n                textFillStyle: '#000',\r\n                strokeStyle: '#fff',\r\n            });\r\n\r\n            wheel.draw();\r\n\r\n            dispatch({ type: RouletteTypes.IncrementColorIndex });\r\n\r\n            if (colorIndex >= 6) dispatch({ type: RouletteTypes.ResetColorIndex });\r\n        }\r\n    };\r\n\r\n    const removeUser = (name: string, uid: string) => {\r\n        dispatch({ type: RouletteTypes.DeleteUser, payload: uid });\r\n        const newUsers = users.filter((user) => user.uid !== uid);\r\n\r\n        if (users.length <= 1) {\r\n            dispatch({ type: RouletteTypes.SetDefaultRouletteActive, payload: true });\r\n            wheel = createRoulette(defaultUsers);\r\n        } else {\r\n            wheel = createRoulette(newUsers);\r\n        }\r\n    };\r\n\r\n    const removeAllUsers = () => {\r\n        dispatch({ type: RouletteTypes.DeleteAllUsers });\r\n\r\n        wheel.segments.forEach(() => wheel.deleteSegment());\r\n\r\n        dispatch({ type: RouletteTypes.SetDefaultRouletteActive, payload: true });\r\n        dispatch({ type: RouletteTypes.ResetColorIndex });\r\n        wheel = createRoulette(defaultUsers);\r\n        wheel.draw();\r\n    };\r\n\r\n    useEffect(() => {\r\n        wheel = createRoulette(defaultUsers);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket?.on('addUser', ({ name, fromMod }: { name: string; fromMod: boolean }) => {\r\n            if (fromMod) {\r\n                addUser({ name, uid: uuidv4() });\r\n            } else {\r\n                if (users.find((user) => user.name === name)) return;\r\n                addUser({ name, uid: uuidv4() });\r\n            }\r\n        });\r\n\r\n        return () => socket?.off('addUser');\r\n    }, [socket, users, spinning, defaultRouletteActive, colorIndex, addUser]);\r\n\r\n    return (\r\n        <div>\r\n            <div className='flex h-screen items-center justify-around'>\r\n                <UsersList removeUser={removeUser} removeAllUsers={removeAllUsers} />\r\n\r\n                <div\r\n                    className={`${\r\n                        spinning ? '' : 'hover:opacity-80'\r\n                    } transition ease-in-out duration-200`}\r\n                >\r\n                    <div className={` ${spinning ? 'ArrowDown-Spinning' : ''} ArrowDown`} />\r\n                    <canvas\r\n                        id='canvas'\r\n                        className={`${spinning ? '' : 'cursor-pointer'} focus:outline-none`}\r\n                        width='510'\r\n                        height='510'\r\n                        onClick={onSpinClick}\r\n                    />\r\n                    <div\r\n                        role='button'\r\n                        tabIndex={-1}\r\n                        className={` ${spinning ? 'cursor-default' : ''} pandito`}\r\n                        onClick={onSpinClick}\r\n                        onKeyPress={() => {}}\r\n                        aria-label='icon'\r\n                    />\r\n                    <div\r\n                        className={`${activeWinner ? '' : 'none'} WheelResult focus:outline-none`}\r\n                        style={\r\n                            activeWinner\r\n                                ? { backgroundColor: `${winnerObject.fillStyle}D8` }\r\n                                : { backgroundColor: 'none' }\r\n                        }\r\n                        onClick={hideWinner}\r\n                        role='button'\r\n                        onKeyPress={() => {}}\r\n                        tabIndex={-1}\r\n                    >\r\n                        {winnerObject.text}\r\n                    </div>\r\n                </div>\r\n\r\n                <ResultsList />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoulettePage;\r\n","C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\hooks\\useSocket.tsx",["78"],"import { useCallback, useState } from 'react';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\nconst useSocket = (serverPath: string) => {\r\n    const [socket, setSocket] = useState<Socket>();\r\n\r\n    const connectSocket = useCallback(() => {\r\n        const socketTemp = io(serverPath, {\r\n            transports: ['websocket'],\r\n            autoConnect: true,\r\n            forceNew: true,\r\n        });\r\n\r\n        setSocket(socketTemp);\r\n    }, [serverPath]);\r\n\r\n    const disconnectSocket = useCallback(() => {\r\n        socket?.disconnect();\r\n    }, [socket]);\r\n\r\n    return {\r\n        socket,\r\n        connectSocket,\r\n        disconnectSocket,\r\n    };\r\n};\r\n\r\nexport default useSocket;\r\n","C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\context\\roulette\\RouletteContext.tsx",[],"C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\context\\roulette\\RouletteReducer.tsx",[],"C:\\Users\\Jaume\\Sync\\Programacion\\React\\ruletafront\\src\\types\\index.tsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"79","replacedBy":"91"},{"ruleId":"81","replacedBy":"92"},{"ruleId":"83","replacedBy":"93"},{"ruleId":"85","replacedBy":"94"},{"ruleId":"87","replacedBy":"95"},{"ruleId":"89","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":11,"column":12,"nodeType":"99","messageId":"100","endLine":11,"endColumn":15,"suggestions":"101"},{"ruleId":"97","severity":1,"message":"98","line":70,"column":43,"nodeType":"99","messageId":"100","endLine":70,"endColumn":46,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":99,"column":11,"nodeType":"105","endLine":124,"endColumn":6},{"ruleId":"106","severity":1,"message":"107","line":4,"column":19,"nodeType":"108","messageId":"109","endLine":4,"endColumn":42},"jsx-a11y/accessible-emoji",[],"lines-around-directive",["110"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],[],["110"],[],[],[],[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["111","112"],["113","114"],"react-hooks/exhaustive-deps","The 'addUser' function makes the dependencies of useEffect Hook (at line 165) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'addUser' in its own useCallback() Hook.","VariableDeclarator","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","padding-line-between-statements",{"messageId":"115","fix":"116","desc":"117"},{"messageId":"118","fix":"119","desc":"120"},{"messageId":"115","fix":"121","desc":"117"},{"messageId":"118","fix":"122","desc":"120"},"suggestUnknown",{"range":"123","text":"124"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"123","text":"125"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"126","text":"124"},{"range":"126","text":"125"},[384,387],"unknown","never",[2445,2448]]